# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((17, 20, 1), "float32"), compute: T.Buffer((17, 20, 1), "float32"), compute_1: T.Buffer((17, 20, 1), "float32"), compute_2: T.Buffer((17, 20, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        ph_0_1 = T.Buffer((340,), data=ph_0.data)
        for i0_i1_fused in T.parallel(340):
            compute_3 = T.Buffer((340,), data=compute.data)
            compute_3[i0_i1_fused] = T.atanh(ph_0_1[i0_i1_fused])
        for i0_i1_fused in T.parallel(340):
            compute_3 = T.Buffer((340,), data=compute_1.data)
            compute_3[i0_i1_fused] = T.atanh(T.sin(ph_0_1[i0_i1_fused]))
        for i0_i1_fused_i2_fused in T.parallel(340):
            compute_3 = T.Buffer((340,), data=compute_2.data)
            compute_3[i0_i1_fused_i2_fused] = T.ceil(ph_0_1[i0_i1_fused_i2_fused])