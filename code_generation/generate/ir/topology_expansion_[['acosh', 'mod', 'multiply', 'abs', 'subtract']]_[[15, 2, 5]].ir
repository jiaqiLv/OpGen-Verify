# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((15, 2, 5), "float32"), T_multiply: T.Buffer((15, 2, 5), "float32"), T_subtract: T.Buffer((15, 2, 5), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        ph_0_1 = T.Buffer((150,), data=ph_0.data)
        for ax0 in T.parallel(15):
            for ax1, ax2 in T.grid(2, 5):
                cse_var_1: T.int32 = ax0 * 10 + ax1 * 5 + ax2
                T_multiply_1 = T.Buffer((150,), data=T_multiply.data)
                T_multiply_1[cse_var_1] = T.truncmod(ph_0_1[cse_var_1], T.acosh(ph_0_1[cse_var_1])) * ph_0_1[cse_var_1]
        for ax0 in T.parallel(15):
            for ax1, ax2 in T.grid(2, 5):
                cse_var_2: T.int32 = ax0 * 10 + ax1 * 5 + ax2
                T_subtract_1 = T.Buffer((150,), data=T_subtract.data)
                T_subtract_1[cse_var_2] = ph_0_1[cse_var_2] - T.fabs(ph_0_1[cse_var_2])