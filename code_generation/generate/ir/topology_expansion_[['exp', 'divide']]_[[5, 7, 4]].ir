# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((5, 7, 4), "float32"), T_divide: T.Buffer((5, 7, 4), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0_ax1_fused_ax2_fused in T.parallel(140):
            compute = T.allocate([1], "float32", "global")
            compute_1 = T.Buffer((1,), data=compute, align=4)
            ph_0_1 = T.Buffer((140,), data=ph_0.data)
            compute_1[0] = T.exp(ph_0_1[ax0_ax1_fused_ax2_fused])
            T_divide_1 = T.Buffer((140,), data=T_divide.data)
            T_divide_1[ax0_ax1_fused_ax2_fused] = ph_0_1[ax0_ax1_fused_ax2_fused] / compute_1[0]