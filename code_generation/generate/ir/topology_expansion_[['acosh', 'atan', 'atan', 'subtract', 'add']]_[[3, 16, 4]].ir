# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((3, 16, 4), "float32"), compute: T.Buffer((3, 16, 4), "float32"), T_add: T.Buffer((3, 16, 4), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        ph_0_1 = T.Buffer((192,), data=ph_0.data)
        for i0_i1_fused in T.parallel(48):
            for i2 in range(4):
                cse_var_1: T.int32 = i0_i1_fused * 4 + i2
                compute_1 = T.Buffer((192,), data=compute.data)
                compute_1[cse_var_1] = T.acosh(ph_0_1[cse_var_1])
        for ax0_ax1_fused in T.parallel(48):
            for ax2 in range(4):
                cse_var_2: T.int32 = ax0_ax1_fused * 4 + ax2
                T_add_1 = T.Buffer((192,), data=T_add.data)
                T_add_1[cse_var_2] = ph_0_1[cse_var_2] + (ph_0_1[cse_var_2] - T.atan(T.atan(ph_0_1[cse_var_2])))