# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((4, 8, 10, 1), "float32"), Scale: T.Buffer((8,), "float32"), Shift: T.Buffer((8,), "float32"), ScaleShift: T.Buffer((4, 8, 10, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for c_outer_outer_inner, i_outer_outer_inner, b_inner, c_inner, i_inner in T.grid(4, 5, 4, 2, 2):
            cse_var_2: T.int32 = c_outer_outer_inner * 2 + c_inner
            cse_var_1: T.int32 = b_inner * 80 + c_outer_outer_inner * 20 + c_inner * 10 + i_outer_outer_inner * 2 + i_inner
            ScaleShift_1 = T.Buffer((320,), data=ScaleShift.data)
            data_1 = T.Buffer((320,), data=data.data)
            ScaleShift_1[cse_var_1] = data_1[cse_var_1] * Scale[cse_var_2] + Shift[cse_var_2]