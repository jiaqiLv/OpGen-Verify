# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((8, 16, 1, 5), "float32"), Scale: T.Buffer((16,), "float32"), Shift: T.Buffer((16,), "float32"), ScaleShift: T.Buffer((8, 16, 1, 5), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for b_outer_outer_inner, c_outer_outer_inner, b_outer_inner, b_inner, c_inner, j_inner in T.grid(2, 8, 2, 2, 2, 5):
            cse_var_2: T.int32 = c_outer_outer_inner * 2 + c_inner
            cse_var_1: T.int32 = b_outer_outer_inner * 320 + b_outer_inner * 160 + b_inner * 80 + c_outer_outer_inner * 10 + c_inner * 5 + j_inner
            ScaleShift_1 = T.Buffer((640,), data=ScaleShift.data)
            data_1 = T.Buffer((640,), data=data.data)
            ScaleShift_1[cse_var_1] = data_1[cse_var_1] * Scale[cse_var_2] + Shift[cse_var_2]