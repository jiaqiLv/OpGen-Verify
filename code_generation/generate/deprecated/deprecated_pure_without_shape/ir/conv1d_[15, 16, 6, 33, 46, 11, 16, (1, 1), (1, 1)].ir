# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((2, 3, 10), "float32"), kernel: T.Buffer((5, 3, 3), "float32"), conv1d_ncw: T.Buffer((2, 5, 4), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        conv1d_ncw_1 = T.Buffer((40,), data=conv1d_ncw.data)
        for ff_outer_inner_init, yy_outer_inner_init, nn_inner_init in T.grid(5, 4, 2):
            conv1d_ncw_1[nn_inner_init * 20 + ff_outer_inner_init * 4 + yy_outer_inner_init] = T.float32(0)
        for rc_outer, ry_outer, ff_outer_inner, yy_outer_inner, nn_inner in T.grid(3, 3, 5, 4, 2):
            cse_var_1: T.int32 = nn_inner * 20 + ff_outer_inner * 4 + yy_outer_inner
            data_1 = T.Buffer((60,), data=data.data)
            kernel_1 = T.Buffer((45,), data=kernel.data)
            conv1d_ncw_1[cse_var_1] = conv1d_ncw_1[cse_var_1] + data_1[nn_inner * 30 + rc_outer * 10 + yy_outer_inner * 2 + ry_outer] * kernel_1[ff_outer_inner * 9 + rc_outer * 3 + ry_outer]