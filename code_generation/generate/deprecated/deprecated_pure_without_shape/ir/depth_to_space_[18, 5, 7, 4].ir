# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((18, 5, 7, 4), "float32"), depth_to_space: T.Buffer((18, 1, 14, 8), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused_i3_fused in T.parallel(2016):
            cse_var_2: T.int32 = i0_i1_fused_i2_fused_i3_fused % 8
            cse_var_1: T.int32 = i0_i1_fused_i2_fused_i3_fused % 112 // 8
            depth_to_space_1 = T.Buffer((2016,), data=depth_to_space.data)
            data_1 = T.Buffer((2520,), data=data.data)
            depth_to_space_1[i0_i1_fused_i2_fused_i3_fused] = data_1[i0_i1_fused_i2_fused_i3_fused // 112 * 140 + T.truncmod(cse_var_1, 2) * 56 + T.truncmod(cse_var_2, 2) * 28 + T.Div(cse_var_1, 2) * 4 + T.Div(cse_var_2, 2)]