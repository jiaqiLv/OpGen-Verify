# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((13, 4, 2, 4), "float32"), space_to_depth: T.Buffer((13, 16, 1, 2), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused_i3_fused in T.parallel(416):
            cse_var_1: T.int32 = i0_i1_fused_i2_fused_i3_fused % 32 // 2
            space_to_depth_1 = T.Buffer((416,), data=space_to_depth.data)
            data_1 = T.Buffer((416,), data=data.data)
            space_to_depth_1[i0_i1_fused_i2_fused_i3_fused] = data_1[i0_i1_fused_i2_fused_i3_fused // 32 * 32 + T.truncmod(cse_var_1, 4) * 8 + T.Div(cse_var_1, 8) * 4 + i0_i1_fused_i2_fused_i3_fused % 2 * 2 + T.Div(T.truncmod(cse_var_1, 8), 4)]