# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((13, 17, 6, 38), "float32"), space_to_depth: T.Buffer((13, 68, 3, 19), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused in T.parallel(2652):
            for i3 in range(19):
                cse_var_1: T.int32 = i0_i1_fused_i2_fused % 204 // 3
                space_to_depth_1 = T.Buffer((50388,), data=space_to_depth.data)
                data_1 = T.Buffer((50388,), data=data.data)
                space_to_depth_1[i0_i1_fused_i2_fused * 19 + i3] = data_1[i0_i1_fused_i2_fused // 204 * 3876 + T.truncmod(cse_var_1, 17) * 228 + i0_i1_fused_i2_fused % 3 * 76 + T.Div(cse_var_1, 34) * 38 + i3 * 2 + T.Div(T.truncmod(cse_var_1, 34), 17)]