# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((16, 5, 2, 22), "float32"), space_to_depth: T.Buffer((16, 20, 1, 11), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused_i3_fused in T.parallel(3520):
            cse_var_1: T.int32 = i0_i1_fused_i2_fused_i3_fused % 220 // 11
            space_to_depth_1 = T.Buffer((3520,), data=space_to_depth.data)
            data_1 = T.Buffer((3520,), data=data.data)
            space_to_depth_1[i0_i1_fused_i2_fused_i3_fused] = data_1[i0_i1_fused_i2_fused_i3_fused // 220 * 220 + T.truncmod(cse_var_1, 5) * 44 + T.Div(cse_var_1, 10) * 22 + i0_i1_fused_i2_fused_i3_fused % 11 * 2 + T.Div(T.truncmod(cse_var_1, 10), 5)]