# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((1, 2, 1, 13, 8), "float32"), Scale: T.Buffer((2, 8), "float32"), Shift: T.Buffer((2, 8), "float32"), ScaleShift: T.Buffer((1, 2, 1, 13, 8), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for j_outer_outer_inner, cb_outer_outer_inner, cc_outer_inner in T.grid(13, 8, 2):
            cse_var_2: T.int32 = cc_outer_inner * 8 + cb_outer_outer_inner
            cse_var_1: T.int32 = cc_outer_inner * 104 + j_outer_outer_inner * 8 + cb_outer_outer_inner
            ScaleShift_1 = T.Buffer((208,), data=ScaleShift.data)
            data_1 = T.Buffer((208,), data=data.data)
            Scale_1 = T.Buffer((16,), data=Scale.data)
            Shift_1 = T.Buffer((16,), data=Shift.data)
            ScaleShift_1[cse_var_1] = data_1[cse_var_1] * Scale_1[cse_var_2] + Shift_1[cse_var_2]