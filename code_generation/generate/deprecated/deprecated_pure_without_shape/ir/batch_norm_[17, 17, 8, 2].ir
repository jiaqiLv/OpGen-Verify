# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((17, 17, 8, 2), "float32"), gamma: T.Buffer((17,), "float32"), beta: T.Buffer((17,), "float32"), moving_mean: T.Buffer((17,), "float32"), moving_var: T.Buffer((17,), "float32"), T_divide: T.Buffer((17, 17, 8, 2), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(17):
            T_reshape = T.allocate([17], "float32", "global")
            T_reshape_1 = T.allocate([1], "float32", "global")
            T_reshape_2 = T.Buffer((17,), data=T_reshape)
            for ax1 in range(17):
                T_reshape_2[ax1] = moving_mean[ax1]
            for ax1, ax2, ax3 in T.grid(17, 8, 2):
                cse_var_1: T.int32 = ax0 * 272 + ax1 * 16 + ax2 * 2 + ax3
                T_reshape_3 = T.Buffer((1,), data=T_reshape_1, align=4)
                T_reshape_3[0] = moving_var[ax1]
                T_divide_1 = T.Buffer((4624,), data=T_divide.data)
                data_1 = T.Buffer((4624,), data=data.data)
                T_divide_1[cse_var_1] = (data_1[cse_var_1] - T_reshape_2[ax1]) / T.sqrt(T_reshape_3[0] + T.float32(1.0000000000000001e-05))