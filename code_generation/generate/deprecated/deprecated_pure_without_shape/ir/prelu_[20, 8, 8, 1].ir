# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((20, 8, 8, 1), "float32"), Scale: T.Buffer((1,), "float32"), compute: T.Buffer((20, 8, 8, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0 in T.parallel(20):
            for i1, i2 in T.grid(8, 8):
                cse_var_1: T.int32 = i0 * 64 + i1 * 8 + i2
                compute_1 = T.Buffer((1280,), data=compute.data)
                data_1 = T.Buffer((1280,), data=data.data)
                compute_1[cse_var_1] = T.if_then_else(T.float32(0) < data_1[cse_var_1], data_1[cse_var_1], data_1[cse_var_1] * Scale[0])