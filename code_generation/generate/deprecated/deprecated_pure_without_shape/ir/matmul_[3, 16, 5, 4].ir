# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(left_matrix: T.Buffer((5, 4), "float32"), right_matrix: T.Buffer((4, 5), "float32"), T_matmul: T.Buffer((5, 5), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax1_outer_outer_outer in range(5):
            T_matmul_1 = T.Buffer((25,), data=T_matmul.data)
            for ax0_inner_init in range(5):
                T_matmul_1[ax0_inner_init * 5 + ax1_outer_outer_outer] = T.float32(0)
            for k_outer, k_inner, ax0_inner in T.grid(2, 2, 5):
                cse_var_1: T.int32 = ax0_inner * 5 + ax1_outer_outer_outer
                left_matrix_1 = T.Buffer((20,), data=left_matrix.data)
                right_matrix_1 = T.Buffer((20,), data=right_matrix.data)
                T_matmul_1[cse_var_1] = T_matmul_1[cse_var_1] + left_matrix_1[ax0_inner * 4 + k_outer * 2 + k_inner] * right_matrix_1[k_outer * 10 + k_inner * 5 + ax1_outer_outer_outer]