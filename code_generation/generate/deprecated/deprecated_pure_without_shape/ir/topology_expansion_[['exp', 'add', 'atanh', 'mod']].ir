# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((2, 17, 9), "float32"), T_mod: T.Buffer((2, 17, 9), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(2):
            compute = T.allocate([1], "float32", "global")
            for ax1, ax2 in T.grid(17, 9):
                cse_var_1: T.int32 = ax0 * 153 + ax1 * 9 + ax2
                compute_1 = T.Buffer((1,), data=compute, align=4)
                ph_0_1 = T.Buffer((306,), data=ph_0.data)
                compute_1[0] = T.exp(ph_0_1[cse_var_1])
                T_mod_1 = T.Buffer((306,), data=T_mod.data)
                T_mod_1[cse_var_1] = T.truncmod(ph_0_1[cse_var_1], T.atanh(ph_0_1[cse_var_1] + compute_1[0]))