# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((14, 2, 2, 34), "float32"), space_to_depth: T.Buffer((14, 8, 1, 17), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused in T.parallel(112):
            for i3 in range(17):
                cse_var_1: T.int32 = i0_i1_fused_i2_fused % 8
                space_to_depth_1 = T.Buffer((1904,), data=space_to_depth.data)
                data_1 = T.Buffer((1904,), data=data.data)
                space_to_depth_1[i0_i1_fused_i2_fused * 17 + i3] = data_1[i0_i1_fused_i2_fused // 8 * 136 + T.truncmod(cse_var_1, 2) * 68 + T.Div(cse_var_1, 4) * 34 + i3 * 2 + T.Div(T.truncmod(cse_var_1, 4), 2)]