# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((2, 20, 5, 18), "float32"), data_red: T.Buffer((), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        data_red_rf = T.allocate([60], "float32", "global")
        data_red_rf_1 = T.Buffer((60,), data=data_red_rf)
        for k0_k1_fused_k2_fused_k3_fused_inner_init in range(60):
            data_red_rf_1[k0_k1_fused_k2_fused_k3_fused_inner_init] = T.float32(-3.4028234663852886e+38)
        for k0_k1_fused_k2_fused_k3_fused_outer, k0_k1_fused_k2_fused_k3_fused_inner in T.grid(60, 60):
            data_1 = T.Buffer((3600,), data=data.data)
            data_red_rf_1[k0_k1_fused_k2_fused_k3_fused_inner] = T.max(data_red_rf_1[k0_k1_fused_k2_fused_k3_fused_inner], data_1[k0_k1_fused_k2_fused_k3_fused_outer * 60 + k0_k1_fused_k2_fused_k3_fused_inner])
        data_red_1 = T.Buffer((1,), data=data_red.data)
        data_red_1[0] = T.float32(-3.4028234663852886e+38)
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[0])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[1])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[2])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[3])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[4])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[5])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[6])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[7])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[8])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[9])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[10])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[11])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[12])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[13])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[14])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[15])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[16])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[17])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[18])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[19])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[20])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[21])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[22])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[23])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[24])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[25])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[26])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[27])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[28])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[29])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[30])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[31])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[32])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[33])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[34])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[35])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[36])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[37])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[38])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[39])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[40])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[41])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[42])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[43])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[44])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[45])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[46])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[47])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[48])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[49])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[50])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[51])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[52])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[53])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[54])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[55])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[56])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[57])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[58])
        data_red_1[0] = T.max(data_red_1[0], data_red_rf_1[59])