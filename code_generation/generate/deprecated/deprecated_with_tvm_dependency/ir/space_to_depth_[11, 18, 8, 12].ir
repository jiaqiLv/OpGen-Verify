# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((11, 18, 16, 24), "float32"), space_to_depth: T.Buffer((11, 72, 8, 12), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused in T.parallel(792):
            for i2 in range(8):
                cse_var_1: T.int32 = i0_i1_fused % 72
                space_to_depth_1 = T.Buffer((76032,), data=space_to_depth.data)
                data_1 = T.Buffer((76032,), data=data.data)
                space_to_depth_1[i0_i1_fused * 96 + i2 * 12:i0_i1_fused * 96 + i2 * 12 + 12] = data_1[i0_i1_fused // 72 * 6912 + T.truncmod(cse_var_1, 18) * 384 + i2 * 48 + T.Div(cse_var_1, 36) * 24 + T.Div(T.truncmod(cse_var_1, 36), 18):i0_i1_fused // 72 * 6912 + T.truncmod(cse_var_1, 18) * 384 + i2 * 48 + T.Div(cse_var_1, 36) * 24 + T.Div(T.truncmod(cse_var_1, 36), 18) + 24:2]