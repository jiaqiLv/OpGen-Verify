# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((17, 9, 14, 16), "float32"), T_sign: T.Buffer((17, 9, 14, 16), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0_ax1_fused in T.parallel(153):
            for ax2 in range(14):
                cse_var_1: T.int32 = ax0_ax1_fused * 224 + ax2 * 16
                T_sign_1 = T.Buffer((34272,), data=T_sign.data)
                data_1 = T.Buffer((34272,), data=data.data)
                T_sign_1[cse_var_1:cse_var_1 + 16] = T.Select(T.Broadcast(T.float32(0), 16) < data_1[cse_var_1:cse_var_1 + 16], T.Broadcast(T.float32(1), 16), T.Select(data_1[cse_var_1:cse_var_1 + 16] < T.Broadcast(T.float32(0), 16), T.Broadcast(T.float32(-1), 16), T.Broadcast(T.float32(0), 16)))