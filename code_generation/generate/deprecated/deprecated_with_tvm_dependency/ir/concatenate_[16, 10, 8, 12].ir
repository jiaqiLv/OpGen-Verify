# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data_a: T.Buffer((16, 10, 8), "float32"), data_b: T.Buffer((16, 10, 8), "float32"), T_concat: T.Buffer((32, 10, 8), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(32):
            for ax1, ax2 in T.grid(10, 8):
                cse_var_1: T.int32 = ax0 * 80 + ax1 * 8 + ax2
                T_concat_1 = T.Buffer((2560,), data=T_concat.data)
                data_b_1 = T.Buffer((1280,), data=data_b.data)
                data_a_1 = T.Buffer((1280,), data=data_a.data)
                T_concat_1[cse_var_1] = T.if_then_else(16 <= ax0, data_b_1[cse_var_1 - 1280], data_a_1[cse_var_1])