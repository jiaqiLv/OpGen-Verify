# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((8, 13, 18, 13), "float32"), compute: T.Buffer((8, 13, 18, 13), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        T_softmax_maxelem = T.allocate([1872], "float32", "global")
        compute_1 = T.allocate([936], "float32", "global")
        T_softmax_maxelem_1 = T.Buffer((1872,), data=T_softmax_maxelem)
        data_1 = T.Buffer((24336,), data=data.data)
        for i0, i1, i2 in T.grid(8, 13, 18):
            T_softmax_maxelem_1[i0 * 234 + i1 * 18 + i2] = T.float32(-3.4028234663852886e+38)
            for k in range(13):
                cse_var_1: T.int32 = i0 * 234 + i1 * 18 + i2
                T_softmax_maxelem_1[cse_var_1] = T.max(T_softmax_maxelem_1[cse_var_1], data_1[i0 * 3042 + i1 * 234 + i2 * 13 + k])
        for i0_outer_outer_inner in range(2):
            compute_2 = T.Buffer((936,), data=compute_1)
            for i0, i1, i2 in T.grid(4, 13, 18):
                compute_2[i0 * 234 + i1 * 18 + i2] = T.float32(0)
                for k in range(13):
                    cse_var_4: T.int32 = i0 * 234
                    cse_var_3: T.int32 = i1 * 18
                    cse_var_2: T.int32 = cse_var_4 + cse_var_3 + i2
                    compute_2[cse_var_2] = compute_2[cse_var_2] + T.exp(data_1[i0_outer_outer_inner * 12168 + i0 * 3042 + i1 * 234 + i2 * 13 + k] - T_softmax_maxelem_1[i0_outer_outer_inner * 936 + cse_var_4 + cse_var_3 + i2])
            for i1_outer_outer_inner, i3_outer_outer_inner, i0_outer_inner, i2_outer_inner in T.grid(13, 13, 4, 18):
                cse_var_7: T.int32 = i0_outer_inner * 234
                cse_var_6: T.int32 = i1_outer_outer_inner * 18
                cse_var_5: T.int32 = i0_outer_outer_inner * 12168 + i0_outer_inner * 3042 + i1_outer_outer_inner * 234 + i2_outer_inner * 13 + i3_outer_outer_inner
                compute_3 = T.Buffer((24336,), data=compute.data)
                compute_3[cse_var_5] = data_1[cse_var_5] - T_softmax_maxelem_1[i0_outer_outer_inner * 936 + cse_var_7 + cse_var_6 + i2_outer_inner] - T.log(compute_2[cse_var_7 + cse_var_6 + i2_outer_inner])