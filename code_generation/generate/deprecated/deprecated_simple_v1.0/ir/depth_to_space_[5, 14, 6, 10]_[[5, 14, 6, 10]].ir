# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((5, 14, 6, 10), "float32"), depth_to_space: T.Buffer((5, 3, 12, 20), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused in T.parallel(180):
            for i3 in range(20):
                cse_var_1: T.int32 = i0_i1_fused_i2_fused % 12
                depth_to_space_1 = T.Buffer((3600,), data=depth_to_space.data)
                data_1 = T.Buffer((4200,), data=data.data)
                depth_to_space_1[i0_i1_fused_i2_fused * 20 + i3] = data_1[i0_i1_fused_i2_fused // 36 * 840 + T.truncmod(cse_var_1, 2) * 360 + T.truncmod(i3, 2) * 180 + i0_i1_fused_i2_fused % 36 // 12 * 60 + T.Div(cse_var_1, 2) * 10 + T.Div(i3, 2)]