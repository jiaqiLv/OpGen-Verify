# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((7, 8, 10, 11), "float32"), adaptive_pool_avg: T.Buffer((7, 8, 1, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(7):
            adaptive_pool_sum = T.allocate([8], "float32", "global")
            adaptive_pool_sum_1 = T.Buffer((8,), data=adaptive_pool_sum, align=32)
            for ax1 in range(8):
                adaptive_pool_sum_1[ax1] = T.float32(0)
                for rv0, rv1 in T.grid(10, 11):
                    data_1 = T.Buffer((6160,), data=data.data)
                    adaptive_pool_sum_1[ax1] = adaptive_pool_sum_1[ax1] + data_1[ax0 * 880 + ax1 * 110 + rv0 * 11 + rv1]
            for ax1 in range(8):
                adaptive_pool_avg_1 = T.Buffer((56,), data=adaptive_pool_avg.data)
                adaptive_pool_avg_1[ax0 * 8 + ax1] = adaptive_pool_sum_1[ax1] * T.float32(0.0090909090909090905)