# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((10, 10, 7, 20), "float32"), depth_to_space: T.Buffer((10, 2, 14, 40), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused in T.parallel(280):
            for i3 in range(40):
                cse_var_1: T.int32 = i0_i1_fused_i2_fused % 14
                depth_to_space_1 = T.Buffer((11200,), data=depth_to_space.data)
                data_1 = T.Buffer((14000,), data=data.data)
                depth_to_space_1[i0_i1_fused_i2_fused * 40 + i3] = data_1[i0_i1_fused_i2_fused // 28 * 1400 + T.truncmod(cse_var_1, 2) * 560 + T.truncmod(i3, 2) * 280 + i0_i1_fused_i2_fused % 28 // 14 * 140 + T.Div(cse_var_1, 2) * 20 + T.Div(i3, 2)]