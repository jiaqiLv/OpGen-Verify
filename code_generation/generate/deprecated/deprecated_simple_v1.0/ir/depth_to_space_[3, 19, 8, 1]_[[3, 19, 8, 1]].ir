# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((3, 19, 8, 1), "float32"), depth_to_space: T.Buffer((3, 4, 16, 2), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused_i3_fused in T.parallel(384):
            cse_var_1: T.int32 = i0_i1_fused_i2_fused_i3_fused % 32 // 2
            depth_to_space_1 = T.Buffer((384,), data=depth_to_space.data)
            data_1 = T.Buffer((456,), data=data.data)
            depth_to_space_1[i0_i1_fused_i2_fused_i3_fused] = data_1[i0_i1_fused_i2_fused_i3_fused // 128 * 152 + T.truncmod(cse_var_1, 2) * 64 + i0_i1_fused_i2_fused_i3_fused % 2 * 32 + i0_i1_fused_i2_fused_i3_fused % 128 // 32 * 8 + T.Div(cse_var_1, 2)]