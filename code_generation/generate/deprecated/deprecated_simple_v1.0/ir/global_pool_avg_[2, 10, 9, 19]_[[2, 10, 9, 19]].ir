# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((2, 10, 9, 19), "float32"), adaptive_pool_avg: T.Buffer((2, 10, 1, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(2):
            adaptive_pool_sum = T.allocate([1], "float32", "global")
            for ax1 in range(10):
                adaptive_pool_sum_1 = T.Buffer((1,), data=adaptive_pool_sum, align=4)
                adaptive_pool_sum_1[0] = T.float32(0)
                for rv0, rv1 in T.grid(9, 19):
                    data_1 = T.Buffer((3420,), data=data.data)
                    adaptive_pool_sum_1[0] = adaptive_pool_sum_1[0] + data_1[ax0 * 1710 + ax1 * 171 + rv0 * 19 + rv1]
                adaptive_pool_avg_1 = T.Buffer((20,), data=adaptive_pool_avg.data)
                adaptive_pool_avg_1[ax0 * 10 + ax1] = adaptive_pool_sum_1[0] * T.float32(0.0058479532163742687)