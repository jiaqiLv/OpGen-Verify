# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((7, 2, 20, 12), "float32"), adaptive_pool_avg: T.Buffer((7, 2, 1, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(7):
            adaptive_pool_sum = T.allocate([2], "float32", "global")
            adaptive_pool_sum_1 = T.Buffer((2,), data=adaptive_pool_sum, align=8)
            for ax1 in range(2):
                adaptive_pool_sum_1[ax1] = T.float32(0)
                for rv0, rv1 in T.grid(20, 12):
                    data_1 = T.Buffer((3360,), data=data.data)
                    adaptive_pool_sum_1[ax1] = adaptive_pool_sum_1[ax1] + data_1[ax0 * 480 + ax1 * 240 + rv0 * 12 + rv1]
            for ax1 in range(2):
                adaptive_pool_avg_1 = T.Buffer((14,), data=adaptive_pool_avg.data)
                adaptive_pool_avg_1[ax0 * 2 + ax1] = adaptive_pool_sum_1[ax1] * T.float32(0.0041666666666666666)