# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((7, 2, 8, 14), "float32"), space_to_depth: T.Buffer((7, 8, 4, 7), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused_i3_fused in T.parallel(1568):
            cse_var_1: T.int32 = i0_i1_fused_i2_fused_i3_fused % 224 // 28
            space_to_depth_1 = T.Buffer((1568,), data=space_to_depth.data)
            data_1 = T.Buffer((1568,), data=data.data)
            space_to_depth_1[i0_i1_fused_i2_fused_i3_fused] = data_1[i0_i1_fused_i2_fused_i3_fused // 224 * 224 + T.truncmod(cse_var_1, 2) * 112 + i0_i1_fused_i2_fused_i3_fused % 28 // 7 * 28 + T.Div(cse_var_1, 4) * 14 + i0_i1_fused_i2_fused_i3_fused % 7 * 2 + T.Div(T.truncmod(cse_var_1, 4), 2)]