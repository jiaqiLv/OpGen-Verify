# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((4, 8), "float32"), MirrorPadInput: T.Buffer((7, 11), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused in T.parallel(77):
            cse_var_2: T.int32 = i0_i1_fused // 11
            cse_var_1: T.int32 = i0_i1_fused % 11
            MirrorPadInput_1 = T.Buffer((77,), data=MirrorPadInput.data)
            data_1 = T.Buffer((32,), data=data.data)
            MirrorPadInput_1[i0_i1_fused] = data_1[T.if_then_else(55 <= i0_i1_fused, 8 - cse_var_2, T.if_then_else(i0_i1_fused < 11, 0, cse_var_2 - 1)) * 8 + T.if_then_else(cse_var_1 == 10, 7, T.if_then_else(cse_var_1 < 2, 1 - cse_var_1, cse_var_1 - 2))]