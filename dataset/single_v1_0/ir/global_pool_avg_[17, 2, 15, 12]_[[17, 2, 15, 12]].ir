# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((17, 2, 15, 12), "float32"), adaptive_pool_avg: T.Buffer((17, 2, 1, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0_ax1_fused in T.parallel(34):
            adaptive_pool_sum = T.allocate([1], "float32", "global")
            adaptive_pool_sum_1 = T.Buffer((1,), data=adaptive_pool_sum, align=4)
            adaptive_pool_sum_1[0] = T.float32(0)
            for rv0, rv1 in T.grid(15, 12):
                data_1 = T.Buffer((6120,), data=data.data)
                adaptive_pool_sum_1[0] = adaptive_pool_sum_1[0] + data_1[ax0_ax1_fused * 180 + rv0 * 12 + rv1]
            adaptive_pool_avg_1 = T.Buffer((34,), data=adaptive_pool_avg.data)
            adaptive_pool_avg_1[ax0_ax1_fused] = adaptive_pool_sum_1[0] * T.float32(0.0055555555555555558)