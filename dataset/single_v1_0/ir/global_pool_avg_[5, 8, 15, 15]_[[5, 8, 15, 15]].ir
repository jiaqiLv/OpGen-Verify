# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((5, 8, 15, 15), "float32"), adaptive_pool_avg: T.Buffer((5, 8, 1, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0 in T.parallel(5):
            adaptive_pool_sum = T.allocate([1], "float32", "global")
            for ax1 in range(8):
                adaptive_pool_sum_1 = T.Buffer((1,), data=adaptive_pool_sum, align=4)
                adaptive_pool_sum_1[0] = T.float32(0)
                for rv0, rv1 in T.grid(15, 15):
                    data_1 = T.Buffer((9000,), data=data.data)
                    adaptive_pool_sum_1[0] = adaptive_pool_sum_1[0] + data_1[ax0 * 1800 + ax1 * 225 + rv0 * 15 + rv1]
                adaptive_pool_avg_1 = T.Buffer((40,), data=adaptive_pool_avg.data)
                adaptive_pool_avg_1[ax0 * 8 + ax1] = adaptive_pool_sum_1[0] * T.float32(0.0044444444444444444)