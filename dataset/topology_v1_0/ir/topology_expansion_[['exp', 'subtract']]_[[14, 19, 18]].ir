# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((14, 19, 18), "float32"), T_subtract: T.Buffer((14, 19, 18), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        compute = T.allocate([4788], "float32", "global")
        compute_1 = T.Buffer((4788,), data=compute)
        ph_0_1 = T.Buffer((4788,), data=ph_0.data)
        for i0_i1_fused_i2_fused in T.parallel(4788):
            compute_1[i0_i1_fused_i2_fused] = T.exp(ph_0_1[i0_i1_fused_i2_fused])
        for ax0 in T.parallel(14):
            for ax1, ax2 in T.grid(19, 18):
                cse_var_1: T.int32 = ax0 * 342 + ax1 * 18 + ax2
                T_subtract_1 = T.Buffer((4788,), data=T_subtract.data)
                T_subtract_1[cse_var_1] = ph_0_1[cse_var_1] - compute_1[cse_var_1]