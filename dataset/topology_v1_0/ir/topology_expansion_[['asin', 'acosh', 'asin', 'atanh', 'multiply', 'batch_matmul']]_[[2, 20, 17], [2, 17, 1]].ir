# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph_0: T.Buffer((2, 20, 17), "float32"), ph_7: T.Buffer((2, 17, 1), "float32"), compute: T.Buffer((2, 20, 17), "float32"), compute_1: T.Buffer((2, 20, 17), "float32"), T_batch_matmul_NN: T.Buffer((2, 20, 1), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        auto_scheduler_layout_transform = T.allocate([34], "float32", "global")
        ph_0_1 = T.Buffer((680,), data=ph_0.data)
        for i0_i1_fused_i2_fused in T.parallel(680):
            compute_2 = T.Buffer((680,), data=compute.data)
            compute_2[i0_i1_fused_i2_fused] = T.asin(ph_0_1[i0_i1_fused_i2_fused])
        for i0_i1_fused_i2_fused in T.parallel(680):
            compute_2 = T.Buffer((680,), data=compute_1.data)
            compute_2[i0_i1_fused_i2_fused] = T.asin(T.acosh(ph_0_1[i0_i1_fused_i2_fused]))
        auto_scheduler_layout_transform_1 = T.Buffer((34,), data=auto_scheduler_layout_transform)
        for ax5, ax7 in T.grid(2, 17):
            cse_var_1: T.int32 = ax5 * 17 + ax7
            ph_7_1 = T.Buffer((34,), data=ph_7.data)
            auto_scheduler_layout_transform_1[cse_var_1] = ph_7_1[cse_var_1]
        for b_outer_outer_outer_i_outer_outer_outer_fused_j_outer_outer_outer_fused_b_outer_outer_inner_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(2):
            T_batch_matmul_NN_1 = T.Buffer((40,), data=T_batch_matmul_NN.data)
            for b_outer_inner_init, i_outer_inner_init, i_inner_init in T.grid(2, 2, 5):
                T_batch_matmul_NN_1[b_outer_inner_init * 20 + b_outer_outer_outer_i_outer_outer_outer_fused_j_outer_outer_outer_fused_b_outer_outer_inner_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 10 + i_outer_inner_init * 5 + i_inner_init] = T.float32(0)
            for b_outer_inner, i_outer_inner, k_inner, i_inner in T.grid(2, 2, 17, 5):
                cse_var_3: T.int32 = b_outer_inner * 20 + b_outer_outer_outer_i_outer_outer_outer_fused_j_outer_outer_outer_fused_b_outer_outer_inner_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 10 + i_outer_inner * 5 + i_inner
                cse_var_2: T.int32 = b_outer_inner * 340 + b_outer_outer_outer_i_outer_outer_outer_fused_j_outer_outer_outer_fused_b_outer_outer_inner_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 170 + i_outer_inner * 85 + i_inner * 17 + k_inner
                T_batch_matmul_NN_1[cse_var_3] = T_batch_matmul_NN_1[cse_var_3] + ph_0_1[cse_var_2] * T.atanh(ph_0_1[cse_var_2]) * auto_scheduler_layout_transform_1[b_outer_inner * 17 + k_inner]