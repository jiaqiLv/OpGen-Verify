void default_function_kernel(float* T_add, float* compute, float* compute_1, float* ph_0);
void default_function_kernel(float* T_add, float* compute, float* compute_1, float* ph_0) {
  #pragma omp parallel for
  for (int32_t i0 = 0; i0 < 11; ++i0) {
    for (int32_t i1 = 0; i1 < 10; ++i1) {
      compute[((i0 * 10) + i1)] = acosf(ph_0[((i0 * 10) + i1)]);
    }
  }
  #pragma omp parallel for
  for (int32_t ax0_ax1_fused_ax2_fused = 0; ax0_ax1_fused_ax2_fused < 110; ++ax0_ax1_fused_ax2_fused) {
    T_add[ax0_ax1_fused_ax2_fused] = (asinhf(ph_0[ax0_ax1_fused_ax2_fused]) + ph_0[ax0_ax1_fused_ax2_fused]);
  }
  #pragma omp parallel for
  for (int32_t i0_i1_fused = 0; i0_i1_fused < 110; ++i0_i1_fused) {
    compute_1[i0_i1_fused] = asinhf(ph_0[i0_i1_fused]);
  }
}

